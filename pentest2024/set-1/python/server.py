import socket
import threading

def handle_client(conn):
    while True:
        #waits for message from client
        data = conn.recv(1024)
        if not data:
            break
        message = data.decode('utf-8')
        print(f"Received: {message}")
        if message == "quit":
            print("Client requested to quit.")
       	    # Send 'quit' message to client and break loop
            conn.sendall("quit".encode('utf-8'))
            break
        # Send a response to the client
        response = input("Enter message(type 'quit' to exit): ")
        conn.sendall(response.encode('utf-8'))
        if response == "quit":
            print("Server requested to quit.")
            break

    conn.close()

def start_server():
    host = '127.0.0.1'  # Localhost
    port = 65432        # Port to bind to
# Sets server bind to address and host and waits for connection
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server_socket:
        server_socket.bind((host, port))
        server_socket.listen()
        print(f"Server listening on {host}:{port}")
#accepts connection and forwards to handle
        conn, addr = server_socket.accept()
        with conn:
            print(f"Connected by {addr}")
            handle_client(conn)

start_server()
